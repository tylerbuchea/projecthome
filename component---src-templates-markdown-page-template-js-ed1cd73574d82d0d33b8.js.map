{"version":3,"sources":["webpack:///./src/templates/MarkdownPageTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","MarkdownPageTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","data","className","markdownRemark","frontmatter","html","a","createElement","title","dangerouslySetInnerHTML","__html","styled","withConfig","displayName","componentId","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","gatsby_browser_entry","to","Layout","Fragment","header","style","margin","maxWidth","padding","paddingTop","position","src","width","height","Date","getFullYear","_2994927498","node"],"mappings":"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","file":"component---src-templates-markdown-page-template-js-ed1cd73574d82d0d33b8.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport function MarkdownPageTemplate({ data, className }) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <div className={className}>\n      <Layout>\n        <SEO title={frontmatter.title} />\n        <div\n          className=\"page-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </Layout>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n\nexport default styled(MarkdownPageTemplate)``\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport default function SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nexport function Header({ className, siteTitle }) {\n  return (\n    <header className={className}>\n      <div className=\"container\">\n        <h1 className=\"title\">\n          <Link to=\"/\" className=\"link\">\n            {siteTitle}\n          </Link>\n        </h1>\n        <div className=\"links\">\n          <Link to=\"/parks\" className=\"link\">\n            Parks\n          </Link>\n          {/* <Link to=\"/beaches\" className=\"link\">\n            Beaches\n          </Link>\n          <Link to=\"/neighborhoods\" className=\"link\">\n            Neighborhoods\n          </Link> */}\n          <Link to=\"/schools\" className=\"link\">\n            Schools\n          </Link>\n          <Link to=\"/real-estate\" className=\"link\">\n            Real Estate\n          </Link>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default styled(Header)`\n  background: rebeccapurple;\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  z-index: 2;\n  width: 100%;\n\n  .container {\n    margin: 0 auto;\n    max-width: 960;\n    padding: 0px 40px;\n    height: 50px;\n    display: grid;\n    grid-template-columns: 150px 1fr;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .title {\n    margin: 0;\n    font-size: 1rem;\n  }\n\n  .link {\n    color: white;\n    text-decoration: none;\n  }\n\n  .links {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  .links > .link {\n    margin-right: 15px;\n  }\n`\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nexport default function Layout({ children }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0,\n            }}\n          >\n            <main style={{ position: \"relative\", paddingTop: 90 }}>\n              <iframe\n                title=\"Google MyMap\"\n                src=\"https://www.google.com/maps/d/embed?mid=140gPqk_yTmdIMQdBkTsRDZSbWMDh6RS7\"\n                className=\"myMap\"\n                style={{\n                  width: \"100%\",\n                  height: 480,\n                }}\n              />\n              {children}\n            </main>\n            <footer>© {new Date().getFullYear()} Tyler Buchea</footer>\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n"],"sourceRoot":""}